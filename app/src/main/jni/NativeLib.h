/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <cpu-features.h>
/* Header for class com_example_uberv_a8_1addingnativebitswithjni_NativeLib */

#ifndef _Included_com_example_uberv_a8_1addingnativebitswithjni_NativeLib
#define _Included_com_example_uberv_a8_1addingnativebitswithjni_NativeLib
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     com_example_uberv_a8_1addingnativebitswithjni_NativeLib
 * Method:    getCpuCount
 * Signature: ()I
 */
//JNIEXPORT jint JNICALL Java_com_example_uberv_a8_11addingnativebitswithjni_NativeLib_getCpuCount
//  (JNIEnv *, jclass);
static jint native_getCpuCount(JNIEnv *env, jclass clazz);

// JNIEnv - pointer is a reference to the JNI API functions
// jclass - reference to the owning Java class this method is attached to (because method defined as static)
// If this was instance methods in Java, this second parameter would be a jobject instead, and would
// reference the owning object instance of the method call
// int - jint, String - jstring

/*
 * Class:     com_example_uberv_a8_1addingnativebitswithjni_NativeLib
 * Method:    getCpuFamily
 * Signature: ()Ljava/lang/String;
 */
//JNIEXPORT jstring JNICALL Java_com_example_uberv_a8_11addingnativebitswithjni_NativeLib_getCpuFamily
//  (JNIEnv *, jclass);
static jstring native_getCpuFamily(JNIEnv *env, jclass clazz);

#ifdef __cplusplus
}
#endif
#endif
